import numpy as np
from numpy import random
from copy import deepcopy
import matplotlib.pyplot as plt
from tqdm import tqdm
import warnings
warnings.filterwarnings("ignore")
np.set_printoptions(threshold=np.inf) # threshold 指定超过多少使用省略号，np.inf代表无限大
np.set_printoptions(suppress=True) #不以科学计数法输出
plt.rcParams['axes.unicode_minus'] = False #显示负号
plt.rcParams['font.family'] = ['sans-serif']
plt.rcParams['font.sans-serif'] = ['SimHei']  # 散点图标签可以显示中文

def haversine_distance(coord1, coord2):
    # 将经纬度从度数转换为弧度
    lat1, lon1 = np.radians(coord1[0]), np.radians(coord1[1])
    lat2, lon2 = np.radians(coord2[0]), np.radians(coord2[1])
    # Haversine 公式
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = np.sin(dlat / 2) ** 2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlon / 2) ** 2
    c = 2 * np.arctan2(np.sqrt(a), np.sqrt(1 - a))
    # 地球半径（单位：公里）
    radius = 6371.0
    # 计算距离
    distance = radius * c
    return distance
coordinates = np.array([
    [33.052466, 107.078539], [33.00691, 106.943519], [33.162452, 107.340352], [33.23089, 107.551097], [32.983209, 107.766627], [33.152748, 106.67331], [32.835302, 106.263788], [33.333119, 106.163146], [32.543287, 107.901175], [33.624014, 106.928095], [33.524357, 107.990847],
    [33.076266, 107.060763], [32.853819, 107.11977], [32.855425, 107.02023], [32.476447, 107.24196], [32.896059, 106.851525], [32.862359, 106.920404], [33.251663, 107.247206], [33.413498, 107.192686], [33.207475, 107.171209], [33.23081, 107.169867], [33.191321, 107.379943], [33.185702, 107.522199], [33.188826, 107.616218], [33.247487, 107.715211], [33.295333, 107.597683], [33.301104, 107.643113], [33.106391, 107.707625], [33.229662, 107.5166], [33.202029, 108.01222], [33.321278, 107.509222], [32.643721, 107.428809], [33.157193, 106.698637], [33.170244, 106.753032], [33.165689, 106.890524], [33.145204, 106.846568], [33.101327, 106.451862], [33.205268, 106.681151], [33.1951, 106.956267], [33.141131, 106.6643], [33.125762, 106.743316], [33.00505, 106.697523], [33.435102, 106.56805], [33.149355, 106.624702], [32.733143, 106.235469], [32.726236, 106.431932], [33.012627, 106.178491], [32.870479, 106.4168], [32.976078, 106.472003], [33.055878, 106.301534], [33.082626, 105.970749], [33.335921, 106.155235], [33.335242, 105.966226], [33.206888, 106.42617], [33.32215, 105.822041], [33.222552, 106.083149], [33.51653, 105.911839], [33.266853, 106.254729], [33.473713, 106.043551], [32.396231, 107.752189], [32.411842, 107.830122], [32.43499, 107.553329], [32.465878, 107.483882], [32.714549, 107.885112], [32.526814, 107.570597], [32.316795, 107.820247], [32.322025, 107.996931], [32.487544, 108.089899], [32.430281, 108.009594], [32.254979, 108.116453], [32.595013, 107.717875], [32.731158, 107.991084], [32.642829, 107.753562], [32.520896, 107.907148], [32.528919, 108.19438], [32.589867, 108.039413], [32.193989, 107.960599], [32.661716, 108.204502], [32.256898, 107.899818], [33.6178, 106.92083], [33.423868, 106.993685], [33.549762, 106.985118], [33.722756, 106.955463], [33.725016, 107.05849], [33.33286, 106.9694], [33.53849, 106.91729], [33.689927, 106.855029], [33.544629, 107.82695], [33.54876, 107.993614], [33.432609, 108.086885], [33.45927, 107.97293], [33.30603, 108.04423], [33.47337, 108.11846], [33.51774, 107.98689]
])
time_result = [0 for i in range(83)]
def time(a,a1):
    aa =a1.split('-')
    aaa = [int(aa[i])+10 for i in range(len(aa))]
    result = haversine_distance(coordinates[a], coordinates[aaa[0]])
    print(result,'---',aaa[0]-10)
    time_result[aaa[0]-11] = result/60
    for i in range(len(aaa)-1):
        result += haversine_distance(coordinates[aaa[i]], coordinates[aaa[i+1]])
        print(result,'---',aaa[i+1]-10)
        time_result[aaa[i+1]-11] = result/60
    print('-----------------------')

time(1,'5-6-3-2-4')
time(2,'9-10-7-8')
time(3,'18-12-11-20-15-16')
time(3,'13-14-17-19')
time(4,'21')
time(5,'22')
time(5,'29-33-26-31')
time(5,'30-28-24-25-23-27-32')
time(6,'34-39-36-38-37-35-40')
time(7,'41-44-42-46-48')
time(7,'47-43-45')
time(8,'63-66-68-55-49-50-59')
time(8,'65-56-58-57-64-67-53-61')
time(8,'60-51-52-54-62')
time(9,'69-73-72-71-70-74-75-76')
time(10,'83-81-79-82-80-77-78')
time(0,'43-41-47-42-44-45-46-48')
time(0,'62-51-52-54-60-53-61')
time(0,'1-4-2-3-8-77-78-80-82')
for i in range(83):
    print(round(time_result[i],2))